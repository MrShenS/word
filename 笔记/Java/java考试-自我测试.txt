注意事项：
	每题2分，满分110
	每题的答案都不长，意思表达正确即可
	每题三种得分标准（0分，1分，2分）
		2分，意思表达清楚，考察的几个点都有叙述到
		1分，大部分描述正确，有瑕疵或者漏了少许考点。
		0分，其他所有情况

1.安装JDK后，需要配置的三个环境变量分别是什么？以及每个环境变量代表的含义是什么？
     PATH	jdk安装路径
	 JAVA_HOME	jdk中工具所在路径
	 CLASSPATH	编译路径
	 
	 JAVA_HOME
		JDK安装路径
	 PATH
		JDK中bin目录所在路径
	 CLASSPATH
		当前要执行的java类（class文件）所在路径

2.java语言中的"Write once, Run anywhere"指的是什么？为什么？
	一次编写，到处运行。
	因为不同平台中有不同的JVM，可以把相同的class文件解释成该平台中所对应的指令去执行。

3.线程有几种可用状态？分别简单解释一下。
	新建  
	就绪
	运行
	阻塞
	死亡

4.类加载器加载了字节码文件之后，会对该文件做字节码校验，请列出几条校验的方面（至少三条）
	字节码版本和JVM是否兼容
	代码不能破坏系统的完整性
	运行时堆栈没有溢出
	参数类型是否正确
	类型转换是否正确
	变量要在使用之前进行初始化
	方法调用与对象引用类型间要匹配
	

5.假设现在我们登录unix服务器后所处的位置在/home/tom
	/home/tom目录下有俩个子目录:
	 	/home/tom/src
		/home/tom/bin
	我们在当前/home/tom下使用vi命令分别编写俩个java源文件
		vi src/Student.java		（com.test包下）
		vi src/StudentTest.java	（com.test包下）
	StudentTest.java中有主函数，其中调用到了Student类中的方法
	编译这俩个类，并且运行StudentTest类

	请写出编译运行的命令？
	要求:这俩个类要一个一个编译,并且编译好的东西放到bin下面。执行所有命令的时候，我们所在的路径都是/home/tom
		$javac -d bin src/Student.java 
		$javac -d bin -cp bin src/StudentTest.java 
		$java -cp bin com.test.StudentTest


6.java程序中，如何给对象申请内存，如何释放不再使用的对象内存？
	通过new 关键字开辟内存
	垃圾回收器自动回收

7.java中的三种注释分别是什么？把class文件反编译后是否可以获取代码中的注释？
	//  	单行注释
	/* */	多行注释
	/** */	文档注释
	不可以

8.java中的标识符指的是什么？
	类名 方法名 变量名
	
	java权限修饰符 有几个？各自作用？
	
	static修饰符可以和其他什么修饰符一起使用
	
	abstract可以和什么一起使用

9.java中的变量分为基本类型变量和引用类型变量，分别列出基本类型变量有哪些，引用类型变量有哪些
	byte short int long 
	char 
	float double 
	boolean 

	类类型  数组类型  接口类型
	
10.int类型能表示整数的最小值和最大值分别是多少？可以用次方数来表示
	-2^31  2^31-1
	

11.观察以下代码
	char c1 = '\u0000';
	char c2 = 0;
	char c3 = 00;
	char c4 = ' ';//单引号中有一个空格

	c1分别和c2、c3、c4比较是否相等（返回ture或false）?
	c1==c2 true
	c1==c3 true
	c1==c4 false

12.java中整型默认类型是int,浮点型默认类型是double,那么以下俩句代码会不会编译出错?为什么?
	byte b = 1;	
	float f = 10.5;	
	该行会出错，double类型赋值给float会出现精度损失
	

13.有以下代码
	int a = 15;
	int b = 3;
  把变量a和变量b的值进行交换，并且要求不能使用第三个变量。
  (至少写出一种方案)
	a = a ^ b;
	b = a ^ b;
	a = a ^ b;


14.根据要求，写出以下三种情况对应的代码示例
	1.变量的声明				int a;
	2.先声明变量，再给变量赋值	int a; a = 10;
	3.变量声明的同时就赋值		int a = 10;


15.实例变量和局部变量的特点，从声明位置、有无默认值、作用范围等方面分别说明
	实例变量 类内方法外声明，有默认值，类的方法内都可以使用
	局部变量 方法内部声明，无默认值，只能在声明的代码块中使用

16.有以下代码
	obj instanceof Student
	请说明该代码的含义？
		判断obj引用 实际指向的对象 是否 为Student或其子类型

17.有以下代码
	byte a = 1;//代码1
	a+=1;  //代码2
	a=a+1; //代码3
	System.out.println(a);//代码4

	代码编译运行后的结果是什么？
		编译出错，代码3那一行 无法通过编译


18.以下代码输出结果是多少？
	System.out.println(17888>>5);
		 559
		 
	32 17888 
	   160
	    188
		160
		 288
		 288

19.在java中，&&和&有什么分别
	两个都可以 逻辑与，但&&具有逻辑短路功能
	&还可以进行 按位运算，按位与

20.有以下代码
	for(int i=0;i<10;i++){
		for(int j=0;j<10;j++){
			if(j == 1){
				break;
			}
		}
	}
	如何让break语句可以跳出外层循环（变量i所在的循环）？用代码举例说明（代码不需要写全，能明确表达出即可）
	
	lableA:for(int i=0;i<10;i++){
		lableB:for(int j=0;j<10;j++){
			if(j == 1){
				break lableA;
			}
		}
	}


21.java中的数组对象和java.util.Arrays类是什么关系?
	Arrays是一个工具类，可以操作数组对象
	java.util.Arrays类是数组的辅助类,该类中有很多静态方法可以用来操作数组对象,例如给数组元素排序、查找数组中某个元素的下标等等

22.有以下代码
	int[] a = new int[2];			//代码1 
	int[] b = new int[2]{100,101};	//代码2		error
	int[] c = {100,101};			//代码3
	int[] d;						//代码4
	d = {100,101};					//代码5		error
	int[] e;						//代码6
	e = new int[]{100,101};			//代码7

	列出你认为编译会报错的代码



23.假设有一个数组对象arr，如何获取该数组的长度？使用该数组对象可以调用到哪些方法？
	arr.length
	数组对象arr只能调用到从Object中继承过来的方法，数组对象本身并没有其他方法
	

24.如何复制一个数组到新数组中，使用哪个类中的哪个方法，只需要写出使用的类名和方法名字即可（至少列出一种情况）
	使用System类中的arraycopy方法
	使用Arrays类中的copyOf方法

25.在java中，Encapsulation、Inheritance、Polymorphism分别指的是什么，注意列举的顺序
	封装  继承  多态

26.有以下代码
	public static void main(String args[])	//代码1   
	static public void main(String[] args)	//代码2		
	public void static main(String[] args)	//代码3		error
	static public void main(String... args)	//代码4		
	public void main(String args[])			//代码5		error
	public static void main(String... args)	//代码6		
	public static void main(String[] test)	//代码7		
	列出对主函数声明有误的代码


27.java中的值传递和引用传递本质上是否相同？为什么？
	本质上相同，传递的都是值，但值传递传的是数据值，而引用传递的是地址值
	因为值传递和引用传递其实都是变量把自身存放的内容复制一份再传给方法的形参，只不过值传递是基本类型的变量把自身存放的数值复制一份传给方法的形参，而引用传递是引用类型的变量把自身存放的堆区内存地址值复制一份传给方法的形参。

	
28.有以下代码
	public class Test{
		
		public static void a1(int a){
			a++;
		}
		public static void a2(Student s){
			s.setName("tom");
		}

		public static void main(){
			int a = 1;
			Test.a1(a);
			System.out.println(a);//代码1

			Student s = new Student();
			s.setName("zs");
			Test.a2(s);
			System.out.println(s.getName());//代码2
		}
	}

	分别列出代码1和代码2输出结果是什么？
		代码1中a的值为  1
		代码2中输出 tom


29.有以下代码
	public class Test{
		public void sayHello(){
			System.out.println(this);//代码1
		}
		public static void main(){
			Test t1 = new Test();
			Test t2 = new Test();
			t1.sayHello();
			t2.sayHello();
		}
	}
	main方法在执行过程的中，代码1中的this代表的谁？
		this代表函数的调用者，t1.sayHello()时代表t1,t2.sayHello()代表t2;

30.有以下代码
	class Base{
		public Base(String s){
			System.out.println("Base: "+s);
		}
	}
	class SubA extends Base{
		public SubA(String s){
			System.out.println("SubA: "+s);
		}
		public static void main(String[] args){
			new SubA("hello");
		}
	}
	编译运行后的结果是什么？为什么？
		编译报错，Base类中没有无参构造器


31.java中，方法重载的要求是什么？（请从方法名、参数列表、返回类型、访问权限修饰符、抛出异常这几个方面来说明）
	方法名相同，参数列表不同，返回类型、权限修饰符、异常不做要求
	
32.java中，方法重写的要求是什么？（请从方法名、参数列表、返回类型、访问权限修饰符、抛出异常这几个方面来说明）
	方法名相同，参数列表相同，
	返回类型可以相同，也可以不同，如果不同必须是原来返回类型的子类型（可隐式转换即可），
	权限不能变小，异常不能变大。

33.有以下代码
	public class A{
		public void sayHello(){
			System.out.println("hello A");
		}
		public A(){
			this.sayHello();
		}
	}

	public class B extends A{
		public void sayHello(){
			System.out.println("hello B");
		}
		public static void main(String[] args){
			new B();
		}
	}

	编译运行后的结果是什么？
		hello B

34.有以下代码
	public class A{
		public void test1(){
			System.out.println("A test1");
		}
	}
	public class B extends A{
		public void test1(){
			System.out.println("B test1");
		}
		public void test2(){
			System.out.println("B test2");
		}
		public static void main(String[] args){
			A a = new B();
			a.test1();
			a.test2();
		}
	}
	编译运行后的结果是什么？为什么？
		编译出错，A类中没有test2这个方法
		
35.在一个类里面，静态方法中不能直接调用非静态方法，但是非静态方法中可以直接调用静态方法，为什么？
	静态方法中没有this引用，所以无法调用非静态方法；
	非静态方法中有this引用，使用对象名是可以调用静态方法的。

	因为静态方法是属于类的，在类加载的时候已经加载处理好了，可以随时使用类名来调用，而非静态方法是属于对象的，只有创建了对象之后，使用对象才能调用。当我们使用类名去调用静态方法的时候，可能还没有创建这个类的对象，那么非静态方法这时就不能调用，所有在静态方法中不能直接调用非静态方法，反之则可以。

36.有以下代码
	public class Test{
		public static final String s;

		public Test(){
			s = "hello";
		}

		public static void main(String[] args){
			System.out.println(s);
		}
	}
	编译运行后的结果是什么？为什么？
		编译报错，s有final修饰，必须给一个初始值。
		static final修饰的属性，只能在声明的时候或者在static代码中赋值，而且只能赋一次值。


37.final关键字可以修饰什么？分别有什么特点
	final修饰类，该类不能被继承
	修饰方法，该方法不能被重写
	修饰变量，这个变量就成为常量，只能初始化一次，其值不能改变

38.抽象类不能使用new关键字创建对象，那么它的构造器有什么作用？
	抽象类一般作为父类存在，其子类实例化对象时，抽象类构造器用来初始化父类部分。

39.接口中可以嵌套定义其他接口（内部接口），之前学习或使用过的哪个接口属于这种情况？（列出一个即可）
	Map.Entry


40.匿名内部类中有没有构造器？
	有，无参构造器
	有构造器，只是我们不能编写和调用（因为没名字），它会有一个默认的构造器的。把编译生产的class文件，使用javap命名进行反编译就可以看到这个默认的构造器。


41.为什么Set、List集合可以调用iterator方法，然后使用迭代器进行遍历，而Map集合不能使用迭代器遍历？
	因为迭代器遍历是Collection中的方法，也就是单列集合根接口，而Map是双列集合。
	因为Set、List集合都继承了Collection接口，而Collection接口又继承了Iterable接口，Iterable接口中提供了iterator方法，该方法可以返回一个迭代器，用来遍历集合。Map集合则没有继承该接口。
	
42.有以下代码
	public interface Test{
		<T> T t(T t);//代码1
	}
	解释代码1的含义
	定义一个泛型方法,<T>是泛型声明，该方法参数为泛型类型，返回值也是泛型，方法名为t.

43.有以下代码
	ArrayList<Object> list = new ArrayList<String>();
	代码编译运行会不会报错？为什么？

	编译报错
	
	ArrayList<Object> 和 ArrayList<String>是俩个不同的类型，并且没有任何关系。
	
	ArrayList<?>才是所有ArrayList加了泛型类型的父类型

44.线程中sleep()和wait()的区别
	sleep()是线程休眠，休眠指定时间后自动往下执行
	wait()是线程阻塞，需要notify()notifyAll()才可以唤醒

45.在java中，会遇到这种情况，我们要完成一个功能，例如需要调用X类中的Y方法，但是X类是谁，Y方法是谁，目前还不确定，只有将来在程序运行的时候才能确定它们到底是谁。那么像这种情况java代码中可以使用什么技术来完成？
	反射技术

46.Exception和Error的区别是什么
	一个是异常 一个是错误
	错误是严重的，和代码无关，异常需要程序员修改代码。

	程序中出现Exception是可以处理的，并且处理后程序还可以继续执行
	程序中出现Error，是比较严重的问题，代码中无法处理，程序会终止运行。

47.String，StringBuffer，StringBuilder的区别是什么?String为什么是不可变的？
	String是字符串，不可变
	StringBuffer是线程安全的可变字符序列，效率低
	StringBuilder是线程不安全的可变字符序列，效率高
	

48.线程之间通信的方法有哪几个？分别起到什么作用？
	wait()进行等待 notify()随机唤醒其中一个线程 notifyAll()唤醒所有等待线程
	条件变量的await()线程等待 条件变量的signal()唤醒指定线程

49.有以下代码
	public class Hello {
		public static void main(String[] args)throws Exception {
			Thread t = new Thread(){
				public void run() {
					//很耗时的操作
				}
			};
			t.start();

			t.sleep(6000);//代码1
		}
	}

	解释代码1的含义
		主线程休眠6s


50.有以下代码【有问题】
	public void test()throws Exception{
		synchronized (getClass()) {
			for(int i=0;i<100;i++){
				if(i==10){
					wait();
				}
			}
		}
	}
	代码编译运行的结果是什么？为什么？
		编译不报错，运行报错，只要锁对象才能调用wait方法，这里的锁对象是Class对象而不是this。

51.假设在线程的等待池中，现在有很多线程都阻塞在这里，notifyAll方法可以叫醒等待池中的线程。
问题：调用哪个对象的notifyAll方法？叫醒的是等待池中的哪些线程？

	应该调用锁对象的notifyAll方法，会唤醒所有等待该锁对象的线程。


52.InputStream类中有如下俩个方法
	public int read();
	public int read(byte b[]);
	分别介绍每个方法的参数和返回值的含义
	
	public int read(); 一次读取一个字节，返回读取的字节值
	public int read(byte b[]); 
	一次读取多个字节，放入字节数组b中，返回实际读取到的字节个数

53.InputStreamReader的作用是什么？
	转换流，将输入字节流转换成输入字符流，并且还可以指定字节转字符时候的编码

54.java中的方法调用有一种情况称为递归,就是一个方法内部再调用自己,同时提供一个退出方法条件即可.有如下代码
	Test.java中:
	main:
		Test t = new Test();
		int sum = t.go(100);
		System.out.println(sum);
	----------------------------
	public int go(int i){
		...  if(i == 1) return 1;
		...	 return i + go(i-1);
	}

	要求:
	1.在go方法内部完成代码
	2.实现从1累加到100的和
	3.go方法内部的所写的代码不能超过俩句，注意一个分号就是一句代码。
	

55.有如下代码
	List<String> list = new ArrayList<>();
	list.add("hello");
	list.add("world");
	list.add("tom");
	list.add("briup");
	for(int i=0;i<list.size();i++){
		System.out.println(list.get(i));
		if("tom".equals(list.get(i))){
			//代码补全 list.remove(i);  i--;
		}
	}
	要求把if条件中的代码补全，最后把list集合中的四个值依次输出，同时如果当前的值是tom则需要把该值从list中删除掉。



