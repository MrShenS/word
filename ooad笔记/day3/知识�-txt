UML

九种图像,分别从不同的角度去描述项目.

  静态图像:
      用例图
      类图
      对象图
      构件图
      部署图

  动态图像:
      时序图(顺序图)
      协作图
      状态图
      活动图



一般在UML画图的软件工具中给我们提供的图形及其名称

类图(Class Diagram)   
  类图是各种类相关的元素静态关系的可视表示。类图不仅包含类，而且还包含接口、枚举、包和各种关系、实例及其联系。 

用例图(Use Case Diagram)   
  用例图是特定系统或对象中用例及外部角色间关系的可视表示。用例表示系统功能以及系统如何同外部角色交互的。

顺序图(Sequence Diagram)   
  顺序图表示实例的交互。它是 InteractionInstanceSet的直接表示，CollaborationInstanceSet 是InteractionInstanceSet内实例交互的集合。而顺序角色图是面向-ClassifierRole表达式的。顺序图是面向实例表达式的。

顺序图（角色）（Sequence Diagram (Role))  
  顺序角色图表示角色概念尖的交互。顺序角色。它是交互的直接表示，是协作关系内ClassifierRoles 的信息交互。同时顺序图是面向实例的交互，而顺序角色图是面向ClassifierRoles 的交互。

协作图(Collaboration Diagram)  
  协作图表示实例间的协作。它是CollaborationInstanceSet内部的实例的协作模型的直接表示。协作角色图是面向类元角色（ClassifierRole）的表示法，而协作图是面向实例的表示法。

协作图（角色）（Collaboration Diagram (Role) )  
  协作角色图表示角色概念间的协作。在协作图中，它是类元角色的协作模型的直接表示。协作图是面向实例的表示法，协作角色图是面向类元角色的表示法。

状态图(Statechart Diagram)   
  状态图是通过状态及其转换表示的特定对象的静态行为。尽管一般地说状态图用于表示类的实例的行为，但它还可以用于表示其他元素的行为。

活动图(Activity Diagram)   
  活动图是状态图的一种特殊形式，适合于表示动作执行流。活动图通常用于表示工作流，常用于象类、包和操作等对象。

构件图(Component Diagram)  
  构件图表示软件构件之间的依赖。组成软件构件的那些元素和实现软件的那些元素都可以用构件图来表示。
  构件是系统中实际存在的可更换部分，它实现特定的功能，符合一套接口标准并实现一组接口。构件代表系统中的一部分物理实施，包括软件代码（源代码、二进制代码或可执行代码）或其等价物（如脚本或命令文件）。
	每个构件可以单独实现一定的功能，为其他构件提供使用接口。
	一般构件分为：
	（1）执行文件：源码编译的结果，可直接运行。
	（2）文件：信息存储体。
	（3）库：类库，动态链接库，数据库
	（4）表：数据库中的表
	（5）文档：文字材料

部署图(Deployment Diagram)   
  部署图表示表示物理计算机和设备硬件元素和及分配给它们的软件构件、过程对象。
  1、结点（Node）
   结点是存在与运行时的代表计算机资源的物理元素，可以是硬件也可以是运行其上的软件系统，比如64主机、Windows server 2008操作系统、防火墙等。结点用三维盒装表示
  2、结点实例（Node Instance）
    结点实例名称格式：Node Instance : node
   与结点的区别在于名称有下划线和结点类型前面有冒号，冒号前面可以有示例名称也可以没有示例名称
  3、物件（Artifact）
   物件是软件开发过程中的产物，包括过程模型（比如用例图、设计图等等）、源代码、可执行程序、设计文档、测试报告、需求原型、用户手册等等。物件表示如下，带有关键字«artifact»和文档图标
  4、连接（Association）
   结点之间的连线表示系统之间进行交互的通信路径，这个通信路径称为连接（Association）
  5、结点容器（Node as Container）
    一个结点可以包括其他的结点，比如组件或者物件，则称此结点为结点容器（Node as Container）。
组合结构图（Composite Structure Diagram)  
  组合结构图是一种表示类元内部结构的图。它包含在在系统于其他部分的交互点。



