select table_name from user_tables

create table bank2 ( id number ,name varchar2(20),manoy number(5,2))

insert into bank values (2,'小蓝' ,500)

select * from bank

commit

select *from employees
1.
select last_name || first_name from employees
2.
 select * from employees where employee_id in (select manager_id from employees)
3.
select  e2.last_name || e2.first_name 员工,e1.last_name || e1.first_name 头  from employees e1,employees e2
 where e1.employee_id = e2.manager_id
4.
select  e2.last_name || e2.first_name 员工,e1.last_name || e1.first_name 头  from employees e1,employees e2
 where e1.employee_id = e2.manager_id and e2.salary>5000
5. 
 select * from employees where department_id in (select department_id from employees where salary between 3000 and 5000)
 
 6.
 select last_name || first_name 姓名 ,job_id ,salary from employees where salary>(select salary from employees where first_name='Bruce')
 
 7.
 select e.last_name||e.first_name,e.phone_number,e.salary,NVL(d.department_name,'NULL'),NVL(j.job_title,'NULL')  
from employees e,departments d,jobs j
where e.job_id=j.job_id
and e.department_id=d.department_id(+);
 
 8.
select * from employees where salary = (select  max(salary) from employees)  
 


9.
select * from departments where department_id =(
  select department_id from  (select count(*) cc ,department_id from employees group by department_id)    
    where cc = (select  max(cc)  from (select count(*) cc ,department_id from employees group by department_id))) 
    
10 

  select e.first_name , t.sa
       from  (select avg(salary) sa,department_id from employees group by department_id) t,employees e where e.salary>t.sa
                                                                                                     and t.department_id = e.department_id
																									 
	



        创建表	
																									 
																									 
																									 
																									 
create table student(
  SNO varchar2(10) primary key,
  SNAME varchar2(20),
  SAGE number(2),
  SSEX varchar2(5)
)

create table teacher (
    TNO varchar2(10) primary key,
    TNAME varchar2(20)
)
 
create table course(
    CNO varchar2(10) primary key,
    CNAME Varchar2(20),
    TNO varchar2(20) not null references teacher(TNO) 
)  



create table sc(
    CNO varchar2(20) not null references course(CNO),
    SNO varchar2(20) not null references student(SNO),
    Score number(4,2)
)



向表中插入数据
 insert into student values('1','申震',78,'男')
 insert into student values('2','张牛牛',59,'男')
 insert into student values('3','赵旭东',49,'男')
 
 
  insert into teacher values('T1','王中华')
  insert into teacher values('T2','郭怀明')  
  insert into teacher values('T3','一休哥')
select table_name  from user_tables 


insert into student values ('s001','学生一',23,'男');
insert into student values ('s002','学生二 ',23,'男');
insert into student values ('s003','学生三',25,'男');
insert into student values ('s004','学生四',20,'女');
insert into student values ('s005','学生五',20,'女');

insert into student values ('s006','学生六',21,'男');
insert into student values ('s007','学生七',21,'男');
insert into student values ('s008','学生八',21,'女');
insert into student values ('s009','学生九',23,'女');
insert into student values ('s010','学生十',22,'女');
commit;





insert into teacher values ('t001', '老师一');
insert into teacher values ('t002', '老师二');
insert into teacher values ('t003', '老师三');
commit;

insert into course values ('c001','J2SE','t002');
insert into course values ('c002','Java Web','t002');
insert into course values ('c003','SSH','t001');
insert into course values ('c004','Oracle','t001');
insert into course values ('c005','SQL SERVER 2005','t003');
insert into course values ('c006','C#','t003');
insert into course values ('c007','JavaScript','t002');
insert into course values ('c008','DIV+CSS','t001');
insert into course values ('c009','PHP','t003');
insert into course values ('c010','EJB3.0','t002');
commit;


insert into sc values ('s001','c001',78.9);
insert into sc values ('s002','c001',80.9);
insert into sc values ('s003','c001',81.9);
insert into sc values ('s004','c001',60.9);
insert into sc values ('s001','c002',82.9);
insert into sc values ('s002','c002',72.9);
insert into sc values ('s003','c002',81.9);
insert into sc values ('s001','c003','59');
commit;


学生系列表的练习

1.
select sc1.sno from sc sc1,sc sc2 where sc1.sno=sc2.sno and sc1.cno='c001' and sc2.cno='c002' and sc1.score<sc2.score
2.
select * from sc where SNO='s001' 

3. select sc.SNO ,s1.avgs from sc ,(select avg(score) avgs,SNO from sc group by SNO) s1 where s1.avgs>60 and s1.SNO =sc.SNO 


4. 
select count(*) ,sum(score),SNO from sc group by SNO
select distinct s.SNO,s.Sname,t1.c,t1.s from sc ,student s ,(select count(*) c,sum(score)s ,SNO from sc group by SNO) t1 where s.sno=t1.sno and sc.SNO=t1.SNO

5.
    select * from course
    select * from sc
    select CNO from course where TNO='t003' 
    select distinct SNO from sc where CNO not in (select CNO from course where TNO='t003')
    
6.    select distinct SNO from sc where CNO  in (select CNO from course where TNO='t003')
    
7.    
     select sc1.sno from sc sc1,sc sc2 where sc1.sno=sc2.sno and sc1.cno='c001' and sc2.cno='c002' and sc1.score>sc2.score

9.  
        select * from sc
      select count(*) from course; 
      select SNO from sc group by SNO having count(*)<(select count(*) from course) 
      select * from student where SNO in ( select SNO from sc group by SNO having count(*)<(select count(*) from course) )



10.   
     select * from student where sno in( select  sno from sc where CNO in( select CNO from sc where SNO ='s001'))
	 
11   
     同上
	 
12.     如何修改多条数据
     	  
         select TNO from teacher where TName='老师三'
         
         select CNO from course where TNO= (select TNO from teacher where TName='老师三')
         
         select avg(score) ,CNO from sc group by CNO 
         
         update sc set  CNO in (select CNO from course where TNO= (select TNO from teacher where TName='老师三'))
		 
		 
13 。
     delete from sc where CNO in ( select CNO from course where TNO= (select TNO from teacher where TName='老师三'))

	 


14.

15.
          select CNO ,max(score),min(score)  from sc group by CNO 
		  
		  
16.      
         （参加人数）  select count(*) ,CNO from sc group by CNO
     (及格人数)  select count(*) ,CNO from (select * from sc where score>60) s group by CNO
	 
     计算及格率：  select t2.c2/t1.c1 from (select count(*) c1 ,CNO from sc group by CNO) t1,
                      (select count(*) c2 ,CNO from (select * from sc where score>60) s group by CNO) t2 where t1.CNO=t2.CNO 
            
       select CNO from sc group by CNO order by avg(score) desc 
	   
17.	   
	      select c.TNO,c.cno, AVGS from course c,(select avg(score) avgs ,CNO from sc group by CNO) t where c.CNO=t.CNO order by TNO ,avgs
	  
	   
18.        
              
19.

20.  查询每门课程被选修的学生数
         select CNO ,count(*) 选修人数  from sc group by CNO

21.查询出只选修了一门课程的全部学生的学号和姓名
    select * from Student s,(select SNO ,Count(*) count from sc group by SNO) t where s.sno=t.sno and t.count=1

22.查询同名同性学生名单，并统计同名人数
      select s1.sname,count(*) 同名人数 from student s1,student s2 where s1.sno=s2.sno and s1.sname=s2.sname group by s1.sname

23.查询每门课程的平均成绩，结果按平均成绩升序排列，平均成绩相同时，按课程号降序排列
      select AVG(score)  from sc  group by CNO order by avg(score),CNO desc